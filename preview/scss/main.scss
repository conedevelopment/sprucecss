@use 'sass:color';
@use 'sass:math';
@use 'sass:map';

@use '../../scss/spruce' with (
  $breakpoints: (
    md: 60em,
  ),
  $colors: (
    btn: (
      custom-background: hsl(0 0% 100%),
      custom-background-hover: hsl(332 49% 29%),
      custom-foreground: hsl(0 0% 0%),
      custom-foreground-hover: hsl(0 0% 100%),
    ),
    form: (
      custom: hsl(0 100% 50%)
    )
  ),
  $container-width: 50rem,
  $settings: (
    hyphens: true,
    color-fallback: true
  ),
  $spacers: (
    xl: 10rem
  ),
  $form-check-font-size-lg: 1.35rem
);

@include spruce.generate-color-variables(
  $colors: spruce.$colors,
  $selector: ':root[data-theme-mode="dark"]'
);

.btn--custom {
  @include spruce.btn-variant(custom-foreground, custom-background);
  box-shadow: -3px 5px spruce.color(custom-foreground, btn);
  border: 3px solid spruce.color(custom-foreground, btn);
  border-radius: 0;
  font-family: spruce.$font-family-cursive;
}

body {
  background-color: spruce.color(background);
}

.main {
  margin: 5rem 0;

  &__container {
    @include spruce.layout-center;
  }

  &__inner {
    > * + * {
      margin-top: 5rem;
    }
  }
}

.section {
  $this: &;

  &-subtitle {
    font-size: spruce.font-size(h5);
  }

  &__body {
    #{$this}-subtitle {
      margin-bottom: spruce.spacer(xs);
      margin-top: 0;

      &:not(:first-child) {
        margin-top: spruce.spacer(m);
      }
    }
  }

  &--color {
    #{$this}__body {
      @include spruce.layout-grid($minimum: 10rem);
    }
  }

  &--typography,
  &--media {
    #{$this}__body {
      @include spruce.layout-stack(spruce.spacer(m));
    }
  }
}

.color-item {
  align-items: end;
  border-radius: spruce.$border-radius-lg;
  display: flex;
  height: 160px;
  overflow: hidden;

  &--bordered {
    box-shadow: 0 0 0 1px spruce.color(border) inset;
  }

  &__caption {
    background-color: #fff;
    border-radius: spruce.$border-radius-sm;
    font-size: 0.9rem;
    line-height: 1;
    margin: 0.5em;
    padding: 0.25em 0.5em;
  }
}

.ellipsis {
  @include spruce.text-ellipsis(3);
}

@each $name, $value in map.get(spruce.$colors, base) {
  .color-item--base-#{$name} {
    background-color: spruce.color($name, base);
  }
}

@each $name, $value in map.get(spruce.$colors, alert) {
  .color-item--alert-#{$name} {
    background-color: spruce.color($name, alert);
  }
}

@each $name, $value in map.get(spruce.$colors, btn) {
  .color-item--btn-#{$name} {
    background-color: spruce.color($name, btn);
  }
}

@each $name, $value in map.get(spruce.$colors, form) {
  .color-item--form-#{$name} {
    background-color: spruce.color($name, form);
  }
}

.scrollbar {
  @include spruce.scrollbar(
    $thumb-background-color: spruce.color(primary)
  );
  @include spruce.layout-stack;
  max-height: 15rem;
  overflow: auto;
}

.custom-heading-size {
  font-size: spruce.responsive-font-size(4rem, 30, 4vw);
}

.custom-link {
  transition: all var(--#{spruce.setting(prefix)}-transition-duration) var(--#{spruce.setting(prefix)}-transition-timing-function);

  &:hover {
    background-color: aqua;
  }
}
