@use '../function' as *;
@use '../mixin' as *;
@use '../config' as *;

@mixin generate-form-group {
  .form-group {
    display: flex;
    flex-direction: column;
    gap: spacer(xxs);

    &--horizontal-check {
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;
      gap: spacer(s);
    }

    &--vertical-check {
      @include layout-stack(s, true, left);
    }

    &--row {
      --gap: #{spacer(xxs)} #{spacer(s)};
      --label-column: 10rem;

      align-items: center;
      display: grid;
      gap: var(--gap);
      grid-template-columns: minmax(0, 1fr);

      @include breakpoint(sm) {
        grid-template-columns: minmax(0, var(--label-column)) minmax(0, 1fr);
      }

      .form-description,
      .field-feedback {
        @include breakpoint(sm) {
          grid-column-start: 2;
        }
      }
    }

    &--stacked {
      display: flex;
      flex-direction: column;

      @include breakpoint(sm) { flex-direction: row; }

      > * {
        + * {
          border-start-end-radius: 0;
          border-start-start-radius: 0;
          margin-block-start: -1px;

          @include breakpoint(sm) {
            border-end-start-radius: 0;
            border-start-end-radius: $form-control-border-radius;
            margin-block-start: 0;
            margin-inline-start: -1px;
          }
        }

        &:not(:last-child) {
          border-end-end-radius: 0;
          border-end-start-radius: 0;

          @include breakpoint(sm) {
            border-end-end-radius: 0;
            border-start-end-radius: 0;
          }
        }

        /* stylelint-disable */
        @include breakpoint(sm) {
          &:first-child {
            border-end-start-radius: $form-control-border-radius;
          }
        }
        /* stylelint-enable */

        &:focus {
          z-index: 2;
        }
      }
    }

    &--grid {
      align-items: flex-start;
      display: flex;
      flex-wrap: wrap;
      gap: spacer(xs);
    }
  }
}
