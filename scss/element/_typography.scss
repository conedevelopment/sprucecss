@use 'sass:map';
@use '../function' as *;
@use '../mixin' as *;
@use '../config' as *;

@mixin generate-typography {
  // Basics
  html {
    -webkit-tap-highlight-color: hsl(0deg 0% 0% / 0%);
  }

  body {
    font-family: map.get($typography, 'family-base');
    font-size: map.get($typography, 'size-base');
    font-weight: map.get($typography, 'weight-base');
    line-height: map.get($typography, 'line-height-base');
  }

  @if setting(hyphens) {
    p,
    li,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      hyphens: auto;
      overflow-wrap: break-word;
    }
  }

  // Headings
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    color: color(heading);
    font-family: map.get($typography, 'family-heading');
    font-weight: map.get($typography, 'weight-heading');
    line-height: map.get($typography, 'line-height-heading');
  }

  h1,
  .h1 {
    font-size: font-size(h1);
  }

  h2,
  .h2 {
    font-size: font-size(h2);
  }

  h3,
  .h3 {
    font-size: font-size(h3);
  }

  h4,
  .h4 {
    font-size: font-size(h4);
  }

  h5,
  .h5 {
    font-size: font-size(h5);
  }

  h6,
  .h6 {
    font-size: font-size(h6);
  }

  // Lists
  ul,
  ol {
    @include layout-stack(xxs, $width: false);
    list-style-position: inside;

    li {
      list-style-position: outside;

      &::marker {
        color: color(marker);
      }
    }
  }

  li > ul,
  li > ol {
    margin-block-start: spacer(xxs);
  }

  dl {
    dt {
      color: color(heading);
      font-weight: bold;
    }

    dd {
      margin: 0;
    }

    dd + dt {
      margin-block-start: spacer(s);
    }
  }

  // Quote, blockquote
  .quote {
    @include layout-stack(xs);
    border-inline-start: 0.5rem solid color(blockquote-border);
    padding-inline-start: spacer(m);

    blockquote {
      border-inline-start: 0;
      padding-inline-start: 0;
    }

    figcaption {
      text-align: start;
    }
  }

  blockquote {
    @include layout-stack(xs);
    border-inline-start: 0.5rem solid color(blockquote-border);
    margin-inline-start: 0;
    padding-inline-start: spacer(m);
  }

  // Inline elmeents
  abbr[title] {
    border-block-end: 1px dotted;
    cursor: help;
    text-decoration: none;
  }

  mark {
    background-color: color(mark-background);
    border-radius: map.get($typography, 'inline-border-radius');
    color: color(mark-foreground);
    padding: map.get($typography, 'inline-padding');
  }

  code,
  kbd,
  samp {
    background-color: color(code-background);
    border-radius: map.get($typography, 'inline-border-radius');
    color: color(code-foreground);
    padding: map.get($typography, 'inline-padding');
  }

  // Lead
  .lead {
    font-size: map.get($typography, 'size-lead');
  }
}
